# PostgreSQL
#spring.datasource.vsat.url=jdbc:postgresql://metacen:5432/metacendb?currentSchema=metacen_contact
spring.datasource.postgres.url=jdbc:postgresql://192.168.51.18:5432/metacendb
spring.datasource.postgres.username=metacen
spring.datasource.postgres.password=metacen@2022
postgres.currentSchema=metacen_contact
spring.datasource.postgres.driverClassName=org.postgresql.Driver

# MongoDB
spring.datasource.mongodb.collectorconfig.uri: mongodb://metacen:metacen2022@192.168.51.18:27017/metacendb_config?authSource=admin
spring.datasource.mongodb.contact.uri:         mongodb://metacen:metacen2022@192.168.51.18:27017/metacendb_contact?authSource=admin

#spring.main.allow-bean-definition-overriding=true
#spring.datasource.mongodb.uri: mongodb://metacen:metacen2022@192.168.51.18:27017
#spring.datasource.mongodb.authentication-database: admin
#spring.datasource.mongodb.database: metacendb_config
#spring.datasource.mongodb.auto-index-creation: false

# Clickhouse
spring.datasource.click_house.url: jdbc:clickhouse://192.168.51.18:8123/metacen
spring.datasource.click_house.username: metacen
spring.datasource.click_house.password: metacen@2022
spring.datasource.click_house.driverClassName: ru.yandex.clickhouse.ClickHouseDriver
clickhouse.cluster.name:      metacen_cluster
clickhouse.schema.local.name: metacen_local
clickhouse.schema.view.name:  metacen

# hibernate config
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true

# L2 cache for hibernate
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

##################### RABBIT-MQ ######################
spring.rabbitmq.host=192.168.10.69
spring.rabbitmq.port=5672
spring.rabbitmq.username=metacen
spring.rabbitmq.password=metacen@2022
##################################################

##################### REDIS ######################
spring.redis.host=192.168.10.69
spring.redis.port=6379
spring.redis.password=metacen@2022
spring.redis.ssl=false
##################################################

##################### KAFKA ######################
kafka.bootstrap.servers.vsat:    192.168.6.162:29092
kafka.bootstrap.servers.metacen: 192.168.51.18:29092,192.168.51.18:29093,192.168.51.18:29094

kafka.consumer.groupId.ais:   dc_vsat_data_ais_consumer_group_01
kafka.consumer.groupId.media: dc_vsat_data_media_consumer_group_01

kafka.consumer.id.vsat.ais:   dc_vsat_ais_data_consumer_id_01
kafka.consumer.id.vsat.media: dc_vsat_media_data_consumer_id_01

kafka.consumer.source.topic.vsatAis:   VSAT_AIS_T
kafka.consumer.source.topic.vsatMedia: VSAT_MEDIA_T

kafka.consumer.sink.topic.ais: AIS_RAW

kafka.consumer.sink.topic.vsatAis:   VSAT_AIS_RAW
kafka.consumer.sink.topic.vsatMedia: VSAT_MEDIA_RAW

kafka.sink.topic.object.group.mapping: DIM_OBJECT_GROUP_MAPPING

# earliest: Khi ch\u1ea1y app s\u1ebd nh\u1eadn h\u1ebft c\u1ea3 nh\u1eefng data non-ack(ch\u01b0a t\u1eebng \u0111\u01b0\u1ee3c nh\u1eadn b\u1edfi groupId n\u00e0y)
# latest:   Khi ch\u1ea1y app s\u1ebd ch\u1ec9 nh\u1eadn \u0111\u01b0\u1ee3c nh\u1eefng data t\u00ednh t\u1eeb l\u00fac app ch\u1ea1y
kafka.consumer.autoOffsetReset: latest

# m\u1ed7i listener s\u1ebd x\u1eed l\u00fd data c\u1ee7a 2 partition,    = 5: x\u1eed l\u00fd data c\u1ee7a 10 partition.
kafka.consumer.listener.concurrency: 5
##################################################

# 5' qu\u00e9t RedisQueue 1 l\u1ea7n \u0111\u1ec3 x\u1eed l\u00fd Ngu\u1ed3n thu VSAT
#scanTimes.redisQueue.process: 0 0/1 * * * *
scanTimes.redisQueue.process: 0 0/5 * * * *

# \u0110\u01b0\u1eddng d\u1eabn l\u01b0u tr\u1eef media file c\u1ee7a METACEN
#metacen.media.folder.storage: /ttttbien1/metacen
#metacen.media.folder.storage: /ttttbien2/vsat
