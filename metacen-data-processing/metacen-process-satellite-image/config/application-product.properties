# PostgreSQL
spring.datasource.postgres.url=jdbc:postgresql://192.168.51.18:5432/metacendb?useSSL=false&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.postgres.username=metacen
spring.datasource.postgres.password=metacen@2022
spring.datasource.postgres.driverClassName=org.postgresql.Driver

# Clickhouse
spring.datasource.click_house.url=jdbc:clickhouse://192.168.51.18:8123/metacen
spring.datasource.click_house.username=metacen
spring.datasource.click_house.password=metacen@2022
spring.datasource.click_house.driverClassName=ru.yandex.clickhouse.ClickHouseDriver
clickhouse.cluster.name=metacen_cluster
clickhouse.schema.local.name=metacen_local
clickhouse.schema.view.name=metacen

# hibernate config
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true

# L2 cache for hibernate
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

##################### RABBIT-MQ ######################
spring.rabbitmq.host=192.168.10.69
spring.rabbitmq.port=5672
spring.rabbitmq.username=metacen
spring.rabbitmq.password=metacen@2022
##################################################

##################### REDIS ######################
spring.redis.host=192.168.10.69
spring.redis.port=6379
spring.redis.password=metacen@2022
spring.redis.ssl=false
##################################################

#################### KAFKA CONNECT ##################################################
kafka.bootstrap.servers: 192.168.51.18:29092,192.168.51.18:29093,192.168.51.18:29094
# earliest: Khi chạy app sẽ nhận hết cả những data non-ack(chưa từng được nhận bởi groupId này)
# latest:   Khi chạy app sẽ chỉ nhận được những data tính từ lúc app chạy
kafka.consumer.autoOffsetReset: latest

# mỗi listener sẽ xử lý data của 2 partition,    = 5: xử lý data của 10 partition.
kafka.consumer.listener.concurrency: 5
###########################################################################################

#################### xử lý ảnh vệ tinh ##################################################
kafka.consumer.groupId.satellite.image.raw.refined:   satellite_image_refined_consumer_group_01
kafka.consumer.id.satellite.image.raw.refined:        satellite_image_refined_consumer_id_01

kafka.consumer.groupId.satellite.image.raw.processed: satellite_image_processed_consumer_group_01
kafka.consumer.id.satellite.image.raw.processed:      satellite_image_processed_consumer_id_01

kafka.topic.source.satellite.image.raw.refined:   SATELLITE_IMAGE_RAW_R
kafka.topic.sink.satellite.image.raw.to.process:  SATELLITE_IMAGE_TO_PROCESS
kafka.topic.source.satellite.image.raw.processed: SATELLITE_IMAGE_PROCESSED
kafka.topic.sink.satellite.image.raw.retry:       SATELLITE_IMAGE_RAW_RETRY
kafka.topic.sink.satellite.image.raw.final:       SATELLITE_IMAGE_FINAL

kafka.topic.sink.data.analyzed.report:            DATA_ANALYZED_REPORT

kafka.consumer.groupId.satellite.image.compare.processed: satellite_image_compare_processed_consumer_group_01
kafka.consumer.id.satellite.image.compare.processed:      satellite_image_compare_processed_consumer_id_01

kafka.topic.source.satellite.image.compare.processed: SATELLITE_IMAGE_CHANGES_PROCESSED
kafka.topic.sink.satellite.image.compare.final:       SATELLITE_IMAGE_CHANGES_RESULT

satellite.image.scan.folder: /mnt/data/thanhdd/remote_sensing/Sentinel2/bienDong_infor

satellite.image.raw.objects.final.folder: objects

satellite.image.objects.final.database.table: satellite_image_data_analyzed

# Lấy ra các bản ghi đang xử lý mà sau 20 phút chưa có phản hồi (timeOut)
process.satellite.image.retry.for.timeout.within: 1200

#process.satellite.image.retry.for.timeout.scheduled: 0 0/15 * * * *

###########################################################################################

