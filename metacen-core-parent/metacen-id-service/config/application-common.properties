## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
#spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=40MB
# Max Request Size
spring.servlet.multipart.max-request-size=200MB

#RPC timeout (s)
rpc.timeout = 10

#enviroment queue name
tech.env = _DEV

#### Kafka ###
kafka.bootstrap.servers=192.168.51.18:9092
kafka.consumergroup=group-demo
kafka.partition=10
dev.group=false

### USER ###
user.rpc.queue = metacen_user_rpc_queue${tech.env}
user.rpc.exchange = metacen_user_rpc_exchange${tech.env}
user.rpc.key = metacen_user_rpc${tech.env}
user.rpc.authen.url = /v1.0/user/authentication
user.rpc.groupcamera.list.url = /v1.0/user/from-group-camera/internal
#Worker
user.worker.queue = metacen_user_worker_queue${tech.env}
#Publisher/Subscriber
user.direct.exchange = metacen_user_direct_exchange${tech.env}
user.direct.key = metacen_user_direct${tech.env}

### ABAC ###
abac.rpc.exchange = metacen_abac_rpc_exchange${tech.env}
abac.rpc.queue = metacen_abac_rpc_queue${tech.env}
abac.rpc.key = metacen_abac_rpc_key${tech.env}
abac.rpc.role.url = /v1.0/abac/role/user/
abac.rpc.author.url = /v1.0/abac/authorization

delete.data.publish.exchange = delete_data_publish_exchange${tech.env}
delete.data.publish.queue = delete_data_publish_queue${tech.env}
delete.data.publish.key = delete_data_publish_key${tech.env}



###### ACOS ######
acos.path = /acos/list-raw-data
acos.path.rabbit.file = rabbit-acos.json
#RPC
acos.rpc.queue = metacen_acos_rpc_queue${tech.env}
acos.rpc.exchange = metacen_acos_rpc_exchange${tech.env}
acos.rpc.key = metacen_acos_rpc${tech.env}
#Worker
acos.worker.queue = metacen_acos_worker_queue${tech.env}
#Publisher/Subscriber
acos.direct.exchange = metacen_acos_direct_exchange${tech.env}
acos.direct.key = metacen_acos_direct${tech.env}

###### AIS ######
ais.path = /ais/list-raw-data,/ais/data-by-id
ais.path.rabbit.file = rabbit-ais.json
#RPC
ais.rpc.queue = metacen_ais_rpc_queue${tech.env}
ais.rpc.exchange = metacen_ais_rpc_exchange${tech.env}
ais.rpc.key = metacen_ais_rpc${tech.env}
#Worker
ais.worker.queue = metacen_ais_worker_queue${tech.env}
#Publisher/Subscriber
ais.direct.exchange = metacen_ais_direct_exchange${tech.env}
ais.direct.key = metacen_ais_direct${tech.env}


# logging
logging.config=${user.dir}/config/logback.xml

# config for ehcache
# spring.cache.ehcache.config=file:${user.dir}/config/ehcache.xml